"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[7311],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,f=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(f,i(i({ref:t},p),{},{components:n})):r.createElement(f,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},33285:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=n(87462),a=(n(67294),n(3905));const o={title:"Step 1) Run a Sentry Node",sidebar_position:1},i=void 0,l={unversionedId:"running-a-validator/on-mainnet/run-a-sentry-node",id:"running-a-validator/on-mainnet/run-a-sentry-node",title:"Step 1) Run a Sentry Node",description:"Before running a Sentry node on, install the following prerequisites:",source:"@site/docs/validators/running-a-validator/on-mainnet/run-a-sentry-node.md",sourceDirName:"running-a-validator/on-mainnet",slug:"/running-a-validator/on-mainnet/run-a-sentry-node",permalink:"/validators/running-a-validator/on-mainnet/run-a-sentry-node",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/validators/running-a-validator/on-mainnet/run-a-sentry-node.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Step 1) Run a Sentry Node",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"On Mainnet",permalink:"/validators/running-a-validator/on-mainnet/"},next:{title:"Step 2) Setup a Validator Account",permalink:"/validators/running-a-validator/on-mainnet/setup-a-validator-account"}},s={},c=[],p={toc:c};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Before running a Sentry node on, install the following prerequisites:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://go.dev/doc/install"},"Golang")," (version > ",(0,a.kt)("inlineCode",{parentName:"li"},"1.21.0"),")"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://www.python.org/downloads/"},"Python")," (version > ",(0,a.kt)("inlineCode",{parentName:"li"},"3.9.1"),")")),(0,a.kt)("p",null,"Once all the required dependencies are installed, create a JSON file\n",(0,a.kt)("inlineCode",{parentName:"p"},"config.json")," with the following content:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "snapshot_url": "https://ss.router.nodestake.org/2024-08-11_router_8721632.tar.lz4",\n    "seed_peers": "ebc272824924ea1a27ea3183dd0b9ba713494f83@router-mainnet-seed.autostake.com:27336,13a59edcee8ede7afa62ae054f266b44701cedc0@213.246.45.16:3656,10fec659763badc3ec55b845c2e6c17a70e77fd5@51.195.104.64:15656,49e4a20d999fe27868a67fc72bc6bf0e1424a610@188.214.133.133:26656,28459bddd2049d31cf642792e6bb87676edaee1e@65.109.61.125:23756,3f2556a0e390fa6f049e85fc0b27064f9ebdb9d7@57.129.28.26:26656,e90a88795977f7cc24982d5684f0f5a4581cd672@185.8.104.157:26656,fbb30fa866f318e9e1c48188711526fc69f66d18@188.214.133.174:26656",\n    "genesis": "https://sentry.tm.rpc.routerprotocol.com/genesis",\n    "genesis_checksum": "34de3eda1e4d9cce80328b96256629817c3baa0643413175e372077b027e9781",\n    "snap_rpc_url":"https://sentry.tm.rpc.routerprotocol.com/"\n}\n')),(0,a.kt)("p",null,"execute the following ",(0,a.kt)("inlineCode",{parentName:"p"},"curl")," request from your terminal/command prompt to run a Sentry node on Router's mainnet:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://bit.ly/48BNjm4 > r.sh && bash r.sh config.json\n")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"After running the script, you'll be prompted to choose one of the following two options: "),(0,a.kt)("ul",{parentName:"admonition"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Option 1) Install Router -")," Installs both the orchestrator and the validator."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Option 2) Install Orchestrator -")," Installs just the orchestrator.")),(0,a.kt)("p",{parentName:"admonition"},"In case you are following this setup for the first time, select ",(0,a.kt)("strong",{parentName:"p"},"option 1"),".")),(0,a.kt)("p",null,"This script will automatically: "),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Clone the ",(0,a.kt)("inlineCode",{parentName:"li"},"routerd")," binary"),(0,a.kt)("li",{parentName:"ol"},"Initialize the chain config"),(0,a.kt)("li",{parentName:"ol"},"Update the default configuration using mainnet's genesis file"),(0,a.kt)("li",{parentName:"ol"},"Configure ",(0,a.kt)("inlineCode",{parentName:"li"},"systemd")," service for ",(0,a.kt)("inlineCode",{parentName:"li"},"cosmovisor")),(0,a.kt)("li",{parentName:"ol"},"Start syncing the chain")),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Wait for the chain to sync to the latest block before moving to the next step.")))}u.isMDXComponent=!0}}]);