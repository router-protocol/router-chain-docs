"use strict";(self.webpackChunkrouter_docs=self.webpackChunkrouter_docs||[]).push([[6100],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},95714:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(87462),o=(n(67294),n(3905));const a={title:"Step 1) Run a Sentry Node",sidebar_position:1},i=void 0,l={unversionedId:"running-a-validator/on-testnet/run-a-sentry-node",id:"running-a-validator/on-testnet/run-a-sentry-node",title:"Step 1) Run a Sentry Node",description:"Before running a Sentry node on , install the following prerequisites:",source:"@site/docs/validators/running-a-validator/on-testnet/run-a-sentry-node.md",sourceDirName:"running-a-validator/on-testnet",slug:"/running-a-validator/on-testnet/run-a-sentry-node",permalink:"/validators/running-a-validator/on-testnet/run-a-sentry-node",draft:!1,editUrl:"https://github.com/router-protocol/docs/tree/main/docs/validators/running-a-validator/on-testnet/run-a-sentry-node.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Step 1) Run a Sentry Node",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"On Testnet",permalink:"/validators/running-a-validator/on-testnet/"},next:{title:"Step 2) Setup a Validator Account",permalink:"/validators/running-a-validator/on-testnet/setup-a-validator-account"}},s={},p=[],u={toc:p};function c(e){let{components:t,...n}=e;return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Before running a Sentry node on , install the following prerequisites:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://go.dev/doc/install"},"Golang")," (version > ",(0,o.kt)("inlineCode",{parentName:"li"},"1.21.0"),")"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://www.python.org/downloads/"},"Python")," (version > ",(0,o.kt)("inlineCode",{parentName:"li"},"3.9.1"),")")),(0,o.kt)("p",null,"Once all the required dependencies are installed, execute the following ",(0,o.kt)("inlineCode",{parentName:"p"},"curl")," request from your terminal/command prompt to run a Sentry node on Router's testnet:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"curl -L https://bit.ly/3IdpohH > r.sh && bash r.sh\n")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"After running the script, you'll be prompted to choose one of the following two options: "),(0,o.kt)("ul",{parentName:"admonition"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Option 1) Install Router -")," Installs both the orchestrator and the validator."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Option 2) Install Orchestrator -")," Installs just the orchestrator.")),(0,o.kt)("p",{parentName:"admonition"},"In case you are following this setup for the first time, select ",(0,o.kt)("strong",{parentName:"p"},"option 1"),".")),(0,o.kt)("p",null,"This script will automatically: "),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Clone the ",(0,o.kt)("inlineCode",{parentName:"li"},"routerd")," binary"),(0,o.kt)("li",{parentName:"ol"},"Initialize the chain config"),(0,o.kt)("li",{parentName:"ol"},"Update the default configuration using testnet's genesis file"),(0,o.kt)("li",{parentName:"ol"},"Configure ",(0,o.kt)("inlineCode",{parentName:"li"},"systemd")," service for ",(0,o.kt)("inlineCode",{parentName:"li"},"routerd")),(0,o.kt)("li",{parentName:"ol"},"Start syncing the chain")),(0,o.kt)("admonition",{type:"info"},(0,o.kt)("p",{parentName:"admonition"},"Wait for the chain to sync to the latest block before moving to the next step.")))}c.isMDXComponent=!0}}]);